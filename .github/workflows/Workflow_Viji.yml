# 1. Pipelinen ska bestå av individuella workflows, med tydliga namngivningar för workflows, jobs och steps.
# 2. Användning av environment-variabler, GitHub-kontextvariabler och GitHub Secrets (t.ex., API-nycklar och Docker-credentials).
# 3. Logik och beroenden (användning av needs och if-satser) ska användas i pipelinen.
# 4. Pipelinen ska kunna triggas manuellt med workflow_dispatch och erbjuda en parameter för att logga fel:
#   a. Om parametern är satt till true och testerna misslyckas, ska en logg-error artefakt genereras.
#   b. Om parametern är satt till false, skapas ingen loggfil, oavsett testresultat.
# 5. När alla tester är godkända ska pipelinen:
#   a. Skapa en Docker-image av applikationen.
#   b. Publicera Docker-imagen på DockerHub och koppla den till en Azure-app(med användning av Azure-credentials).

name: Test Workflow

on:
  workflow_dispatch: # Trigger the workflow manually

jobs:
  job_Utest:
    name: Unit Test Job
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.10

    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    - name: Run unit tests
      run: |
        pytest testing/weatherdata_unit

  job_Itest:
    name: Integration Test Job
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.10

    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    - name: Run integration tests
      run: |
        pytest testing/weatherdata_integration

     # Build Docker image
    - name: Build Docker Image
      run: |
          docker build -t vijisomu10/test_dockerhub:latest .

    # Push Docker image to Docker Hub
    - name: Push Docker Image to Docker Hub
      run: |
        docker push vijisomu10/test_dockerhub:latest
